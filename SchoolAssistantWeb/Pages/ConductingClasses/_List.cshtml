@model SchoolAssistant.Infrastructure.Models.ConductingClasses.ScheduledLessonsList.ScheduledLessonListModel

<table class="scheduled-lessons-list">
    <thead>
        <tr>
            <th>
                <span>Czas</span>
            </th>
            <th>
                <span>Klasa</span>
            </th>
            <th>
                <span>Przedmiot</span>
            </th>
            <th>
                <span>Temat zajęć</span>
            </th>
            <th>
                <span>Frekwencja</span>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr id="@(item == Model.Incoming ? "incoming-lesson" : "")">
                <td>
                    <span>@item.StartTime.ToString("ddd, HH:mm")</span>
                </td>
                <td>
                    <span>@item.ClassName</span>
                </td>
                <td>
                    <span>@item.SubjectName</span>
                </td>
                @if (item.HeldClasses is null)
                {
                    <td></td>
                    <td></td>
                } else
                {
                    <td>
                        <span>@item.HeldClasses.Topic</span>
                    </td>
                    <td>
                        <span>@item.HeldClasses.AmountOfPresentStudents / @item.HeldClasses.AmountOfAllStudents</span>
                    </td>
                }
                <td>
                    @* Button for going to details of already held classes, or conductor panel for classes that are to held *@
                    @{
                        bool closeOrOngoing = item == Model.Incoming 
                            && item.StartTime.AddMinutes(-Model.MinutessBeforeClose) <= DateTime.Now
                            && item.StartTime.AddMinutes(item.Duration) >= DateTime.Now;
                    }
                    @if (closeOrOngoing)
                    {
                    <button 
                        class="conduct-btn"
                    >
                        Poprowadź zajęcia
                    </button>
                    }
                    else if (item.HeldClasses is not null)
                    {
                    <button 
                        class="see-past-details-btn"
                    >
                        Szczegóły
                    </button>
                    }
                    else if (item.StartTime < DateTime.Now)
                    {
                    <button 
                        class="see-omitted-btn"
                    >
                        Uzupełnij
                    </button>
                    }
                    else
                    {
                    <button
                        class="see-upcomming-btn"
                    >
                        Szczegóły nadchodzących
                    </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
